/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from './tinymce.component';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/constants';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '@angular/core/src/linker/element_ref';
import * as import10 from '@angular/core/src/zone/ng_zone';
import * as import11 from '@angular/core/src/linker/query_list';
import * as import12 from '@angular/core/src/linker/view_container';
import * as import13 from '../mention/mention.directive.ngfactory';
import * as import14 from '@angular/core/src/linker/component_factory_resolver';
import * as import15 from '../mention/mention.directive';
export class Wrapper_TinyMCE {
  /*private*/ _eventHandler:Function;
  context:import0.TinyMCE;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  constructor(p0:any,p1:any) {
    this._changed = false;
    this.context = new import0.TinyMCE(p0,p1);
    this._expr_0 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  check_htmlContent(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.htmlContent = currValue;
      this._expr_0 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_TinyMCE_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_TinyMCE_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.TinyMCE>;
  _TinyMCE_0_3:Wrapper_TinyMCE;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_TinyMCE_Host0,renderType_TinyMCE_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'tinymce',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_TinyMCE0(this.viewUtils,this,0,this._el_0);
    this._TinyMCE_0_3 = new Wrapper_TinyMCE(new import9.ElementRef(this._el_0),this.injectorGet(import10.NgZone,this.parentIndex));
    this.compView_0.create(this._TinyMCE_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._TinyMCE_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.TinyMCE) && (0 === requestNodeIndex))) { return this._TinyMCE_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._TinyMCE_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._TinyMCE_0_3.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const TinyMCENgFactory:import8.ComponentFactory<import0.TinyMCE> = new import8.ComponentFactory<import0.TinyMCE>('tinymce',View_TinyMCE_Host0,import0.TinyMCE);
const styles_TinyMCE:any[] = ([] as any[]);
var renderType_TinyMCE:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,styles_TinyMCE,{});
export class View_TinyMCE0 extends import2.AppView<import0.TinyMCE> {
  _viewQuery_MentionDirective_0:import11.QueryList<any>;
  _text_0:any;
  _el_1:any;
  _text_2:any;
  _el_3:any;
  /*private*/ _vc_3:import12.ViewContainer;
  _MentionDirective_3_5:import13.Wrapper_MentionDirective;
  _text_4:any;
  _el_5:any;
  _text_6:any;
  _el_7:any;
  _text_8:any;
  _text_9:any;
  _text_10:any;
  /*private*/ _expr_14:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_TinyMCE0,renderType_TinyMCE,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
    this._expr_14 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._viewQuery_MentionDirective_0 = new import11.QueryList<any>();
    this._text_0 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    this._el_1 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray4(4,'class','form-group','style','position:relative'),(null as any));
    this._text_2 = this.renderer.createText(this._el_1,'\n      ',(null as any));
    this._el_3 = import3.createRenderElement(this.renderer,this._el_1,'div',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._vc_3 = new import12.ViewContainer(3,1,this,this._el_3);
    this._MentionDirective_3_5 = new import13.Wrapper_MentionDirective(new import9.ElementRef(this._el_3),this.parentView.injectorGet(import14.ComponentFactoryResolver,this.parentIndex),this._vc_3.vcRef);
    this._text_4 = this.renderer.createText(this._el_1,'\n      ',(null as any));
    this._el_5 = import3.createRenderElement(this.renderer,this._el_1,'div',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_6 = this.renderer.createText(this._el_5,'\n        ',(null as any));
    this._el_7 = import3.createRenderElement(this.renderer,this._el_5,'textarea',new import3.InlineArray8(8,'class','hidden','cols','60','id','tmce','rows','4'),(null as any));
    this._text_8 = this.renderer.createText(this._el_7,'',(null as any));
    this._text_9 = this.renderer.createText(this._el_5,'\n      ',(null as any));
    this._text_10 = this.renderer.createText(this._el_1,'\n    ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_3,new import3.InlineArray4(4,'keydown',(null as any),'blur',(null as any)),this.eventHandler(this.handleEvent_3));
    this._viewQuery_MentionDirective_0.reset([this._MentionDirective_3_5.context]);
    this.context.mention = this._viewQuery_MentionDirective_0.first;
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2,
      this._el_3,
      this._text_4,
      this._el_5,
      this._text_6,
      this._el_7,
      this._text_8,
      this._text_9,
      this._text_10
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import15.MentionDirective) && (3 === requestNodeIndex))) { return this._MentionDirective_3_5.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_3_0_0:any = this.context.items;
    this._MentionDirective_3_5.check_mention(currVal_3_0_0,throwOnChange,false);
    this._MentionDirective_3_5.ngDoCheck(this,this._el_3,throwOnChange);
    this._vc_3.detectChangesInNestedViews(throwOnChange);
    const currVal_14:any = import3.inlineInterpolate(1,'',this.context.htmlContent,'');
    if (import3.checkBinding(throwOnChange,this._expr_14,currVal_14)) {
      this.renderer.setText(this._text_8,currVal_14);
      this._expr_14 = currVal_14;
    }
  }
  destroyInternal():void {
    this._vc_3.destroyNestedViews();
  }
  handleEvent_3(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._MentionDirective_3_5.handleEvent(eventName,$event) && result);
    return result;
  }
}